<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">
	<modelVersion>4.0.0</modelVersion>
	<groupId>org.alfresco.maven</groupId>
	<artifactId>alm-parent</artifactId>
	<name>Application Lifecycle Management Parent</name>
	<packaging>pom</packaging>
	<version>3.0.0-SNAPSHOT</version>

	<!-- Used by CI and maven-release-plugin -->
	<scm>
		<connection>${maven.release.svn.tags}</connection>
		<developerConnection>${maven.release.svn.trunk}</developerConnection>
		<url>${maven.release.svn.url}</url>
	</scm>


	<distributionManagement>
		<repository>
			<id>${maven.deploy.repository.id}</id>
			<name>Maven Deploy Repository</name>
			<url>${maven.deploy.repository.url}</url>
		</repository>
	</distributionManagement>

	<repositories>
		<repository>
			<id>ss-public</id>
			<url>http://repository.sourcesense.com/maven2</url>
		</repository>
	</repositories>

	<build>
		<defaultGoal>package</defaultGoal>
		<plugins>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-eclipse-plugin</artifactId>
				<configuration>
					<downloadSources>${eclipse.downloadSources}</downloadSources>
				</configuration>
			</plugin>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-compiler-plugin</artifactId>
				<configuration>
					<source>${java.compiler.version}</source>
					<target>${java.compiler.version}</target>
				</configuration>
			</plugin>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-release-plugin</artifactId>
				<configuration>
					<dryRun>${maven.release.dryRun}</dryRun>
					<preparationGoals>clean package</preparationGoals>
					<goals>${maven.release.goals}</goals>
					<tagBase>${maven.release.svn.tags}</tagBase>
				</configuration>
			</plugin>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-surefire-plugin</artifactId>
				<configuration>
					<!--
						Skip the normal tests, we'll run them in the integration-test
						phase
					-->
					<excludes>
						<exclude>**/incontainer/*.java</exclude>
					</excludes>
					<systemProperties>
						<property>
							<name>browser</name>
							<value>${browser}</value>
						</property>
						<property>
							<name>servlet.port</name>
							<value>${servlet.port}</value>
						</property>
						<property>
							<name>selenium.port</name>
							<value>${selenium.port}</value>
						</property>
					</systemProperties>
				</configuration>
				<executions>
					<execution>
						<phase>integration-test</phase>
						<goals>
							<goal>test</goal>
						</goals>
						<configuration>
							<includes>
								<include>**/incontainer/*.java</include>
							</includes>
							<testFailureIgnore>true</testFailureIgnore>
						</configuration>
					</execution>
				</executions>
			</plugin>
		</plugins>
	</build>

	<profiles>
		<!-- profile>
			<id>run</id>
			<build>
				<defaultGoal>integration-test</defaultGoal>
				<plugins>
					<plugin>
						<groupId>org.codehaus.cargo</groupId>
						<artifactId>cargo-maven2-plugin</artifactId>
						<inherited>true</inherited>
						<executions>
							<execution>
								<id>install</id>
								<phase>generate-resources</phase>
								<goals>
									<goal>install</goal>
								</goals>
								<inherited>false</inherited>
							</execution>
						</executions>
						<configuration>
							<container>
								<containerId>${cargo.container.name}</containerId>
								<zipUrlInstaller>
									<url>${cargo.container.url}</url>
									<installDir>${cargo.container.install.directory}/${cargo.container.name}</installDir>
								</zipUrlInstaller>
								<log>${project.build.directory}/logs/${cargo.container.name}.log</log>
								<output>${project.build.directory}/logs/${cargo.container.name}.out</output>
								<timeout>600000</timeout>
							</container>
							<configuration>
								<properties>
									<cargo.servlet.port>${cargo.container.servlet.port}</cargo.servlet.port>
								</properties>
							</configuration>
							<wait>true</wait>
						</configuration>
					</plugin>
				</plugins>
			</build>
		</profile>

		<profile>
			<id>incontainer-test</id>
			<build>
				<defaultGoal>integration-test</defaultGoal>
				<plugins>
					<plugin>
						<groupId>org.codehaus.cargo</groupId>
						<artifactId>cargo-maven2-plugin</artifactId>
						<executions>
							<execution>
								<id>install</id>
								<phase>generate-resources</phase>
								<goals>
									<goal>install</goal>
								</goals>
							</execution>
							<execution>
								<id>start-container</id>
								<phase>pre-integration-test</phase>
								<inherited>false</inherited>
								<goals>
									<goal>start</goal>
								</goals>
								<configuration>
									<wait>false</wait>
								</configuration>
							</execution>
							<execution>
								<id>stop-container</id>
								<phase>post-integration-test</phase>
								<goals>
									<goal>stop</goal>
								</goals>
							</execution>
						</executions>
					</plugin>
					<plugin>
						<groupId>org.apache.maven.plugins</groupId>
						<artifactId>maven-surefire-plugin</artifactId>
						<configuration>
							<skip>true</skip>
							<systemProperties>
								<property>
									<name>browser</name>
									<value>${selenium.browser}</value>
								</property>
								<property>
									<name>servlet.port</name>
									<value>${cargo.container.servlet.port}</value>
								</property>
								<property>
									<name>selenium.port</name>
									<value>${cargo.container.servlet.port}</value>
								</property>
							</systemProperties>
						</configuration>
						<executions>
							<execution>
								<phase>integration-test</phase>
								<goals>
									<goal>test</goal>
								</goals>
								<configuration>
									<skip>false</skip>
								</configuration>
							</execution>
						</executions>
					</plugin>
				</plugins>
			</build>
		</profile-->

		<profile>
			<id>distribute</id>
			<build>
				<defaultGoal>cargo:deployer-redeploy</defaultGoal>
				<plugins>
					<plugin>
						<groupId>org.codehaus.cargo</groupId>
						<artifactId>cargo-maven2-plugin</artifactId>
						<configuration>
							<container>
								<containerId>${cargo.remote.name}</containerId>
								<type>remote</type>
							</container>
							<configuration>
								<type>runtime</type>
							</configuration>
							<deployer>
								<type>remote</type>
								<deployables>
									<deployable>
										<properties>
											<context>${pom.cargo.context}</context>
										</properties>
									</deployable>
								</deployables>
							</deployer>
						</configuration>
					</plugin>
				</plugins>
			</build>
		</profile>

	</profiles>
</project>
