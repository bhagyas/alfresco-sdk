<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">
	<modelVersion>4.0.0</modelVersion>
	<groupId>com.sourcesense.maven</groupId>
	<artifactId>alm-parent</artifactId>
	<name>Application Lifecycle Management Parent</name>
	<packaging>pom</packaging>
	<version>3.0.0-SNAPSHOT</version>

	<!-- Used by CI and maven-release-plugin -->
	<scm>
		<connection>${maven.release.svn.tags}</connection>
		<developerConnection>${maven.release.svn.trunk}</developerConnection>
		<url>${maven.release.svn.url}</url>
	</scm>

	<!-- Default values for build-time properties -->
	<properties>
		<!-- Dev Environment settings -->
		<application.properties.location>src/main/properties/${env}</application.properties.location>
		<application.properties.filename>application.properties</application.properties.filename>
		<eclipse.downloadSources>true</eclipse.downloadSources>
		<java.compiler.version>1.5</java.compiler.version>
		<!-- Maven Release Plugin settings -->
		<maven.release.dryRun>false</maven.release.dryRun>
		<maven.release.goals>install deploy</maven.release.goals>
		<!-- Selenium settings -->
		<selenium.browser>firefox</selenium.browser>
		<!-- Derived Maven Deploy Plugin settings -->
		<maven.release.svn.scm>scm:svn:${maven.release.svn.url}/trunk</maven.release.svn.scm>
		<maven.release.svn.tags>scm:svn:${maven.release.svn.url}/tags</maven.release.svn.tags>
		<!-- Maven Site Plugin Settings -->
		<site_pom_description>${project.description}</site_pom_description>
		<site_pom_url>${project.organization.url}</site_pom_url>
		<site_pom_groupId>${project.groupId}</site_pom_groupId>
		<site_pom_artifactId>${project.artifactId}</site_pom_artifactId>
		<site_pom_version>${project.version}</site_pom_version>
		<site_tags_url>${svn.tags.url}</site_tags_url>
		<site_site_url>${site.url}</site_site_url>
	</properties>

	<distributionManagement>
		<repository>
			<id>${maven.deploy.repository.id}</id>
			<name>Maven Deploy Repository</name>
			<url>${maven.deploy.repository.url}</url>
		</repository>
	</distributionManagement>

	<repositories>
		<repository>
			<id>ss-public</id>
			<url>http://repository.sourcesense.com/maven2</url>
		</repository>
		<repository>
			<id>ss-snapshots</id>
			<url>http://repository.sourcesense.com/maven2-snapshots</url>
		</repository>
		<repository>
			<id>ss-nexus</id>
			<url>http://repository.sourcesense.com/nexus/content/groups/public</url>
		</repository>
		<repository>
			<id>box-nexus</id>
			<url>http://box.session.it:8080/nexus/content/groups/public</url>
		</repository>
	</repositories>
	<pluginRepositories>
		<pluginRepository>
			<id>box-nexus</id>
			<url>http://box.session.it:8080/nexus/content/groups/public</url>
		</pluginRepository>
	</pluginRepositories>

	<dependencies>
		<dependency>
			<groupId>com.sourcesense.tomcat</groupId>
			<artifactId>tc-server</artifactId>
			<version>1.0</version>
			<type>zip</type>
		</dependency>
		<dependency>
			<groupId>com.sourcesense.tomcat</groupId>
			<artifactId>tc-server-instance</artifactId>
			<version>1.0</version>
			<type>zip</type>
		</dependency>
	</dependencies>


	<build>
		<defaultGoal>package</defaultGoal>
		<plugins>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-eclipse-plugin</artifactId>
				<configuration>
					<downloadSources>${eclipse.downloadSources}</downloadSources>
				</configuration>
			</plugin>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-compiler-plugin</artifactId>
				<configuration>
					<source>${java.compiler.version}</source>
					<target>${java.compiler.version}</target>
				</configuration>
			</plugin>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-release-plugin</artifactId>
				<configuration>
					<dryRun>${maven.release.dryRun}</dryRun>
					<preparationGoals>clean package</preparationGoals>
					<goals>${maven.release.goals}</goals>
					<tagBase>${maven.release.svn.tags}</tagBase>
				</configuration>
			</plugin>
			<!--
				Tests are skipped by default and executed with the specfic flow
				profile
			-->
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-surefire-plugin</artifactId>
				<version>2.5-SNAPSHOT</version>
				<configuration>
					<skip>true</skip>
				</configuration>
			</plugin>
			<plugin>
				<groupId>org.codehaus.cargo</groupId>
				<artifactId>cargo-maven2-plugin</artifactId>
				<version>1.0-SNAPSHOT</version>
			</plugin>
		</plugins>
	</build>

	<!--
		Profile for appserver deployment. To deploy locally on an appserver
		(other then the embedded NB: you have to call this profile explicitly
	-->

	<profiles>

		<profile>
			<id>local</id>
			<properties>
				<env>local</env>
				<cargo.remote.id>tomcat5x</cargo.remote.id>
				<cargo.remote.hostname>localhost</cargo.remote.hostname>
				<cargo.remote.password>manager</cargo.remote.password>
				<cargo.remote.username>manager</cargo.remote.username>
			</properties>
		</profile>

		<profile>
			<id>integration-test</id>
			<activation>
				<property>
					<name>flow</name>
					<value>integration-test</value>
				</property>
			</activation>
			<build>
				<defaultGoal>integration-test</defaultGoal>
				<plugins>
					<plugin>
						<groupId>org.apache.maven.plugins</groupId>
						<artifactId>maven-surefire-plugin</artifactId>
						<version>2.5-SNAPSHOT</version>
						<executions>
							<execution>
								<id>integration-test</id>
								<goals>
									<goal>test</goal>
								</goals>
								<phase>integration-test</phase>
								<configuration>
									<additionalClasspathElements>
										<additionalClasspathElement>${project.build.directory}/${project.build.finalName}/WEB-INF/classes</additionalClasspathElement>
									</additionalClasspathElements>
									<resources>
										<resource>
											<directory>${project.build.directory}/${project.build.finalName}/WEB-INF/lib</directory>
										</resource>
									</resources>
									<skip>false</skip>
									<workingDirectory>${project.build.directory}</workingDirectory>
								</configuration>
								<inherited>true</inherited>
							</execution>
						</executions>
						<configuration>
							<skip>true</skip>
						</configuration>
					</plugin>
				</plugins>
			</build>
			<dependencies>
				<dependency>
					<groupId>javax.servlet</groupId>
					<artifactId>servlet-api</artifactId>
				</dependency>
			</dependencies>
		</profile>

		<profile>
			<id>selenium-test</id>
			<build>
				<plugins>
					<plugin>

						<configuration>
							<!--
								Skip the normal tests, we'll run them in the integration-test
								phase
							-->
							<systemProperties>
								<property>
									<name>browser</name>
									<value>${browser}</value>
								</property>
								<property>
									<name>servlet.port</name>
									<value>${servlet.port}</value>
								</property>
								<property>
									<name>selenium.port</name>
									<value>${selenium.port}</value>
								</property>
							</systemProperties>
						</configuration>
						<executions>
							<execution>
								<id>run-selenium-tests</id>
								<configuration>
									<includes>
										<include>**/selenium/*.java</include>
									</includes>
								</configuration>
								<inherited>true</inherited>
							</execution>
						</executions>
					</plugin>
				</plugins>
			</build>
		</profile>

		<profile>
			<id>run</id>
			<build>
				<defaultGoal>integration-test</defaultGoal>
				<plugins>
					<plugin>
						<groupId>org.codehaus.cargo</groupId>
						<artifactId>cargo-maven2-plugin</artifactId>
						<version>1.0-SNAPSHOT</version>

						<configuration>
							<container>
								<containerId>tomcat5x</containerId>
								<type>installed</type>
								<zipUrlInstaller>
									<url>${tc.server.url}</url>
									<installDir>${project.basedir}/tc-server</installDir>
								</zipUrlInstaller>
								<timeout>600000</timeout>
							</container>
						</configuration>
						<executions>
							<execution>
								<id>unpack-tomcat-instances</id>
								<phase>generate-sources</phase>
								<goals>
									<goal>install</goal>
								</goals>
								<inherited>false</inherited>
							</execution>
						</executions>
					</plugin>
					<plugin>
						<groupId>org.apache.maven.plugins</groupId>
						<artifactId>maven-dependency-plugin</artifactId>
						<executions>
							<execution>
								<id>overlay-tc-server</id>
								<phase>generate-resources</phase>
								<goals>
									<goal>unpack-dependencies</goal>
								</goals>
								<configuration>
									<includeArtifactIds>tc-server</includeArtifactIds>
									<outputDirectory>${tc.server.home}/${tc.server.name}</outputDirectory>
								</configuration>
								<inherited>false</inherited>
							</execution>
							<execution>
								<id>install-tc-server-instance</id>
								<phase>generate-resources</phase>
								<goals>
									<goal>unpack-dependencies</goal>
								</goals>
								<configuration>
									<includeArtifactIds>tc-server-instance</includeArtifactIds>
									<outputDirectory>${project.build.directory}/tc-server-instance</outputDirectory>
								</configuration>
							</execution>
						</executions>
					</plugin>
					<plugin>
						<groupId>org.apache.maven.plugins</groupId>
						<artifactId>maven-resources-plugin</artifactId>
						<version>2.3</version>
						<executions>
							<execution>
								<id>overlay-tc-server-instance</id>
								<phase>generate-resources</phase>
								<goals>
									<goal>copy-resources</goal>
								</goals>
								<configuration>
									<outputDirectory>${project.build.directory}/tc-server-instance</outputDirectory>
									<resources>
										<resource>
											<directory>features/tc-server/conf</directory>
											<includes>
												<include>*</include>
											</includes>
											<targetPath>conf</targetPath>
										</resource>
										<resource>
											<directory>features/tc-server/bin</directory>
											<includes>
												<include>*</include>
											</includes>
											<targetPath>bin</targetPath>
										</resource>
									</resources>
								</configuration>
							</execution>
						</executions>
					</plugin>
					<plugin>
						<groupId>org.codehaus.mojo</groupId>
						<artifactId>exec-maven-plugin</artifactId>
						<executions>
							<execution>
								<id>chmod-tc-server-instance</id>
								<phase>generate-resources</phase>
								<goals>
									<goal>exec</goal>
								</goals>
								<configuration>
									<executable>chmod</executable>
									<arguments>
										<argument>+x</argument>
										<argument>${project.build.directory}/tc-server-instance/run-instance.sh</argument>
									</arguments>
									<successCodes>
										<successCode>0</successCode>
									</successCodes>
								</configuration>
							</execution>
							<execution>
								<id>run-tc-server</id>
								<phase>generate-resources</phase>
								<goals>
									<goal>exec</goal>
								</goals>
								<configuration>
									<executable>${project.build.directory}/tc-server-instance/run-instance.sh</executable>
									<workingDirectory>${project.build.directory}/tc-server-instance</workingDirectory>
									<arguments>
										<argument>start</argument>
										<argument>${tc.server.home}/${tc.server.name}</argument>
										<argument>${tc.server.sequenceNumber}</argument>
									</arguments>
									<successCodes>
										<successCode>0</successCode>
										<successCode>1</successCode>
									</successCodes>
								</configuration>
							</execution>
						</executions>
					</plugin>
				</plugins>
			</build>
		</profile>

		<!--
			this only defines the default phase. Specific implementations may
			override it per project TODO: we might remove it
		-->
		<profile>
			<id>distribute</id>
			<build>
				<defaultGoal>integration-test</defaultGoal>
				<plugins>
					<plugin>
						<groupId>org.codehaus.cargo</groupId>
						<artifactId>cargo-maven2-plugin</artifactId>
						<configuration>
							<container>
								<containerId>${cargo.remote.id}</containerId>
								<type>remote</type>
							</container>
							<configuration>
								<type>runtime</type>
								<properties>
									<cargo.hostname>${cargo.remote.hostname}</cargo.hostname>
									<cargo.servlet.port>${cargo.remote.servlet.port}</cargo.servlet.port>
									<cargo.remote.password>${cargo.remote.password}</cargo.remote.password>
									<cargo.remote.username>${cargo.remote.username}</cargo.remote.username>
								</properties>
							</configuration>
						</configuration>
						<executions>
							<execution>
								<id>remote-deploy</id>
								<goals>
									<goal>deployer-redeploy</goal>
								</goals>
								<phase>pre-integration-test</phase>
							</execution>
						</executions>
					</plugin>
				</plugins>
			</build>
		</profile>
	</profiles>
</project>
